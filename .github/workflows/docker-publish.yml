name: Docker Publish

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: "Version to publish"
        required: true
        default: "latest"
      registry:
        description: "Registry to publish to"
        required: true
        default: "both"
        type: choice
        options:
          - ghcr
          - dockerhub
          - both
      platforms:
        description: "Target platforms"
        required: true
        default: "linux/amd64"
        type: choice
        options:
          - linux/amd64
          - linux/amd64,linux/arm64

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        if: github.event.inputs.registry == 'ghcr' || github.event.inputs.registry == 'both' || github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PAT_TOKEN }}

      - name: Login to Docker Hub
        if: github.event.inputs.registry == 'dockerhub' || github.event.inputs.registry == 'both' || github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Generate image names
        id: image_names
        run: |
          OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          echo "ghcr_image=ghcr.io/$OWNER/cloudimgs" >> $GITHUB_OUTPUT
          echo "dockerhub_image=${{ secrets.DOCKER_USERNAME }}/cloudimgs" >> $GITHUB_OUTPUT
          echo "Debug info:"
          echo "- Event: ${{ github.event_name }}"
          echo "- Ref: ${{ github.ref }}"
          echo "- Tag: ${{ github.ref_name }}"
          echo "- SHA: ${{ github.sha }}"

      - name: Extract metadata for GitHub Packages
        id: meta-ghcr
        if: github.event.inputs.registry == 'ghcr' || github.event.inputs.registry == 'both' || github.event_name == 'push'
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.image_names.outputs.ghcr_image }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Extract metadata for Docker Hub
        id: meta-dockerhub
        if: github.event.inputs.registry == 'dockerhub' || github.event.inputs.registry == 'both' || github.event_name == 'push'
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.image_names.outputs.dockerhub_image }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push to GitHub Packages
        if: github.event.inputs.registry == 'ghcr' || github.event.inputs.registry == 'both' || github.event_name == 'push'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.gha
          push: true
          tags: ${{ steps.meta-ghcr.outputs.tags }}
          platforms: ${{ github.event.inputs.platforms || 'linux/amd64' }}
          build-args: |
            NODE_OPTIONS=--max-old-space-size=4096

      - name: Build and push to Docker Hub
        if: github.event.inputs.registry == 'dockerhub' || github.event.inputs.registry == 'both' || github.event_name == 'push'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.gha
          push: true
          tags: ${{ steps.meta-dockerhub.outputs.tags }}
          platforms: ${{ github.event.inputs.platforms || 'linux/amd64' }}
          build-args: |
            NODE_OPTIONS=--max-old-space-size=4096

      - name: Success notification
        run: |
          echo "âœ… Docker images published successfully!"
          if [[ "${{ github.event.inputs.registry }}" == "ghcr" || "${{ github.event.inputs.registry }}" == "both" || "${{ github.event_name }}" == "push" ]]; then
            echo "GitHub Packages: ${{ steps.image_names.outputs.ghcr_image }}"
            echo "Tags: ${{ steps.meta-ghcr.outputs.tags }}"
            echo "Debug - GitHub Packages tags:"
            echo "${{ steps.meta-ghcr.outputs.tags }}" | tr ',' '\n' | sed 's/^/  /'
          fi
          if [[ "${{ github.event.inputs.registry }}" == "dockerhub" || "${{ github.event.inputs.registry }}" == "both" || "${{ github.event_name }}" == "push" ]]; then
            echo "Docker Hub: ${{ steps.image_names.outputs.dockerhub_image }}"
            echo "Tags: ${{ steps.meta-dockerhub.outputs.tags }}"
            echo "Debug - Docker Hub tags:"
            echo "${{ steps.meta-dockerhub.outputs.tags }}" | tr ',' '\n' | sed 's/^/  /'
          fi
