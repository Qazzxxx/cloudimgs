name: Docker Publish

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: "Version to publish"
        required: true
        default: "latest"
      registry:
        description: "Registry to publish to"
        required: true
        default: "ghcr"
        type: choice
        options:
          - ghcr
          - dockerhub
          - both

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:v0.13.0

      - name: Login to GitHub Container Registry
        if: github.event.inputs.registry == 'ghcr' || github.event.inputs.registry == 'both' || github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        if: github.event.inputs.registry == 'dockerhub' || github.event.inputs.registry == 'both'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata for GitHub Packages
        id: meta-ghcr
        if: github.event.inputs.registry == 'ghcr' || github.event.inputs.registry == 'both' || github.event_name == 'push'
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.title=CloudImgs
            org.opencontainers.image.description=A modern image hosting application with React frontend and Node.js backend
            org.opencontainers.image.vendor=CloudImgs
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.event.head_commit.timestamp }}

      - name: Extract metadata for Docker Hub
        id: meta-dockerhub
        if: github.event.inputs.registry == 'dockerhub' || github.event.inputs.registry == 'both'
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/cloudimgs
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.title=CloudImgs
            org.opencontainers.image.description=A modern image hosting application with React frontend and Node.js backend
            org.opencontainers.image.vendor=CloudImgs
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}

      - name: Build and push to GitHub Packages
        if: github.event.inputs.registry == 'ghcr' || github.event.inputs.registry == 'both' || github.event_name == 'push'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta-ghcr.outputs.tags }}
          labels: ${{ steps.meta-ghcr.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          build-args: |
            BUILDKIT_INLINE_CACHE=1

      - name: Build and push to Docker Hub
        if: github.event.inputs.registry == 'dockerhub' || github.event.inputs.registry == 'both'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta-dockerhub.outputs.tags }}
          labels: ${{ steps.meta-dockerhub.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          build-args: |
            BUILDKIT_INLINE_CACHE=1

      - name: Image digest - GitHub Packages
        if: github.event.inputs.registry == 'ghcr' || github.event.inputs.registry == 'both' || github.event_name == 'push'
        run: |
          echo "✅ GitHub Packages image published successfully!"
          echo "Image: ghcr.io/${{ github.repository }}"
          echo "Tags: ${{ steps.meta-ghcr.outputs.tags }}"
          echo "Package URL: https://github.com/${{ github.repository }}/pkgs/container/cloudimgs"

      - name: Image digest - Docker Hub
        if: github.event.inputs.registry == 'dockerhub' || github.event.inputs.registry == 'both'
        run: |
          echo "✅ Docker Hub image published successfully!"
          echo "Image: ${{ secrets.DOCKER_USERNAME }}/cloudimgs"
          echo "Tags: ${{ steps.meta-dockerhub.outputs.tags }}"

      - name: Notify failure
        if: failure()
        run: |
          echo "❌ Docker image publish failed!"
          echo "Please check the logs above for details."
          echo "Common issues:"
          echo "1. Check if all dependencies are properly installed"
          echo "2. Verify client build process"
          echo "3. Ensure .dockerignore doesn't exclude necessary files"
          echo "4. Check for memory issues during build"
