name: GitHub Packages

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: "Version to publish"
        required: true
        default: "latest"

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:v0.13.0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PAT_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.title=CloudImgs
            org.opencontainers.image.description=A modern image hosting application with React frontend and Node.js backend
            org.opencontainers.image.vendor=CloudImgs
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.event.head_commit.timestamp }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          build-args: |
            BUILDKIT_INLINE_CACHE=1
            NODE_OPTIONS=--max-old-space-size=4096
          provenance: false
          outputs: type=docker,dest=/tmp/image.tar

      - name: Verify image
        run: |
          echo "Verifying built image..."
          docker load < /tmp/image.tar
          docker images | grep cloudimgs
          echo "Image verification completed"

      - name: Image digest
        run: |
          echo "✅ GitHub Packages image published successfully!"
          echo "Image: ghcr.io/${{ github.repository }}"
          echo "Tags: ${{ steps.meta.outputs.tags }}"
          echo "Package URL: https://github.com/${{ github.repository }}/pkgs/container/cloudimgs"

      - name: Notify failure
        if: failure()
        run: |
          echo "❌ GitHub Packages publish failed!"
          echo "Please check the logs above for details."
          echo ""
          echo "Common issues and solutions:"
          echo "1. Memory issues: Check NODE_OPTIONS and increase memory limit"
          echo "2. Dependency issues: Verify all packages are compatible"
          echo "3. Build process: Check for syntax errors in React components"
          echo "4. Docker context: Ensure .dockerignore doesn't exclude necessary files"
          echo "5. BuildKit: Try updating to latest BuildKit version"
          echo "6. Platform issues: Try building for single platform first"
          echo ""
          echo "Debug steps:"
          echo "- Run 'npm run build' locally to test client build"
          echo "- Check for any console errors in the build output"
          echo "- Verify all imports and dependencies are correct"
          echo "- Test with a simpler Dockerfile first"
